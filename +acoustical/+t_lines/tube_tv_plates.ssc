component (Propagation = blocks) tube_tv_plates  
% tube_tv_plates - thin rectangular tube with thermoviscous losses
% This component implements a thin segmented rectangular tube as described
% in "Analog model for thermoviscous propagation in a cylindrical
% tube," by Stephen C. Thompson, Thomas B. Gabrielson and Daniel 
% M. Warren, http://dx.doi.org/10.1121/1.4861237.

% Copyright 2022 Stephen C. Thompson
% Distributed under the 3-Clause BSD License
% See LicenseInfo.pdf file in this distribution

    parameters
      Ndl = 3; % Number of differential tube lengths
      LR_branches = 4; % number of LR branches
      CR_branches = 4; % number of CR branches
      length = {0.02, 'm'}; % tube length
      t =  {0.001, 'm'};    % tube thickness (small dimension)
      w =  {0.01,  'm'};    % tube width (larger dimansion)
    end
    parameters (Access = private)
      y0 = t/2;
      area = t*w;
      ele_dl = length/Ndl; 
      C0 = area*ele_dl/p1.rho/p1.c^2;
      R1 = p1.rho^2*p1.c^2*p1.Cp*y0^2/(area*p1.kappa*(p1.gamma-1)*ele_dl);
      L0 = p1.rho * ele_dl/area;
      R0 = p1.rho*p1.nu*ele_dl/y0^2/area;
  end
  nodes
    p1 = acoustical.acoustical;
    p2 = acoustical.acoustical;
    p3 = acoustical.acoustical;
  end
  annotations
    p1: Side = left;
    p2: Side = right;
    p3: Side = bottom;
  end
  for ii=1:2
      components (ExternalAccess = none)
      dl_Zend(ii) = acoustical.hidden.Zdl_tv_plates(LR_branches = LR_branches, L0 = L0/2, R0 = R0/2);
    end
  end
  for ii=1:Ndl-1
    components(ExternalAccess = none)
      dl_Z(ii) = acoustical.hidden.Zdl_tv_plates(LR_branches = LR_branches, L0 = L0, R0 = R0);
    end
  end
  for ii=1:Ndl
    components (ExternalAccess = none)
      dl_Y(ii) = acoustical.hidden.Ydl_tv_plates(CR_branches = CR_branches, C0 = C0, R0 = R1);
    end
  end
  connections
    connect(p1, dl_Zend(1).p1);
    connect(p2, dl_Zend(2).p2);
    connect(dl_Z(Ndl-1).p2, dl_Zend(2).p1, dl_Y(Ndl).p1);
    connect(dl_Y(Ndl).p2, p3);    
    connect(dl_Zend(1).p2, dl_Z(1).p1, dl_Y(1).p1);
    connect(dl_Y(1).p2, p3);
  end
  for ii=2:Ndl-1
      connections
          connect(dl_Z(ii-1).p2, dl_Z(ii).p1, dl_Y(ii).p1);
          connect(dl_Y(ii).p2, p3);
      end
  end
end
