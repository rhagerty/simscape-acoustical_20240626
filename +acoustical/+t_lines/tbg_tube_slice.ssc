component (Propagation = blocks) tbg_tube_seg  
% tbg_tube_slice
% lossy tube as descibed in TG Gabrielson transdcuer notes pp. III-17-22  
% This component implements a differential length piece of a 
% lossy cylindrical tube. Losses are frequency independent, but match the 
% value for thermoviscous loss at a specified frequeny

    parameters
      Ndl = 3;              % Number of differential tube lengths
      length = {0.1, 'm'};  % tube length
      A =  {1, 'm^2'};       % tube Area
      perim = {1, 'm'};        % tube perimeter
      f = {1000, 'Hz'};      % frequenfy for loss calc
%       R = {1e-20, 'Pa/(m^3/s)'} % series resistance
%       G = {1e20, '(m^3/s)/Pa'} % parallel conductance
    end
    parameters (Access = private)
      om = 2*pi*f;
      ele_dl = length/Ndl; 
      C0 = A * ele_dl/port3.rho/port3.c^2;
      M0 = port1.rho * ele_dl/A;
      R0 = om * port3.rho * sqrt(2*port3.nu/om)*per*ele_dl/(2*A^2)
      G0 = 1/(2*port3.rho*port3.c^2/((port3.gamma-1)*om*sqrt(2*port3.kappa/(port3.rho*om*port3.Cp))*per*ele_dl));
  end
  nodes
    port1 = acoustical.acoustical;
    port2 = acoustical.acoustical;
    port3 = acoustical.acoustical;
  end
  annotations
    port1: Side = left;
    port2: Side = right;
    port3: Side = bottom;
  end
  for ii=1:2
      components (ExternalAccess = none)
      dl_Zend_M(ii) = acoustical.elements.inertance(m = M0/2, r_m = R0/2);
    end
  end
  for ii=1:Ndl-1
    components(ExternalAccess = none)
      dl_Z_M(ii) = acoustical.elements.inertance(m = M0, r_m = R0);
    end
  end
  for ii=1:Ndl
    components (ExternalAccess = none)
      dl_Y_C(ii) = acoustical.elements.compliance(c = C0, g_c = G0);
    end
  end
  connections
    connect(port1, dl_Zend_M(1).pp);
    connect(port2, dl_Zend_M(2).nn);
    connect(dl_Z_M(Ndl-1).nn, dl_Zend_M(2).pp, dl_Y_C(Ndl).pp);
    connect(dl_Y_C(Ndl).nn, port3);    
    connect(dl_Zend_M(1).nn, dl_Z_M(1).pp, dl_Y_C(1).pp);
    connect(dl_Y_C(1).nn, port3);
  end
  for ii=2:Ndl-1
      connections
          connect(dl_Z_M(ii-1).nn, dl_Z_M(ii).pp, dl_Y_C(ii).pp);
          connect(dl_Y_C(ii).nn, port3);
      end
  end
end
